{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","title","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_1__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","name","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","Header","siteTitle","react","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","Layout","header","paddingTop","_755544856"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAYeM,UARM,kBACnBH,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACE,EAAA,EAAD,CAAKE,MAAM,mBACXJ,EAAA,qCACAA,EAAA,0GCRJH,EAAAC,EAAAC,GAAAF,EAAAQ,EAAAN,EAAA,4BAAAO,IAAAT,EAAAQ,EAAAN,EAAA,uCAAAQ,IAAAV,EAAAQ,EAAAN,EAAA,gCAAAS,IAAA,IAAAR,EAAAH,EAAA,GAAAY,EAAAZ,EAAAa,EAAAV,GAAAW,EAAAd,EAAA,GAAAe,EAAAf,EAAAa,EAAAC,GAAAE,EAAAhB,EAAA,KAAAiB,EAAAjB,EAAAa,EAAAG,GAAAhB,EAAAQ,EAAAN,EAAA,yBAAAe,EAAAC,IAAAlB,EAAAQ,EAAAN,EAAA,+BAAAc,EAAA,aAAAhB,EAAAQ,EAAAN,EAAA,6BAAAc,EAAA,WAAAhB,EAAAQ,EAAAN,EAAA,yBAAAc,EAAA,OAAAhB,EAAAQ,EAAAN,EAAA,4BAAAc,EAAA,UAAAhB,EAAAQ,EAAAN,EAAA,+BAAAc,EAAA,iBAAAG,EAAAnB,EAAA,KAAAoB,EAAApB,EAAAa,EAAAM,GAAAnB,EAAAQ,EAAAN,EAAA,iCAAAkB,EAAAF,IAAA,IAAAG,EAAArB,EAAA,IAAAA,EAAAQ,EAAAN,EAAA,8BAAAmB,EAAA,IAYA,IAAMX,EAAqBY,IAAMC,cAAc,IAEzCZ,EAAc,SAAAa,GAAK,OACvBZ,EAAAM,EAAAO,cAACf,EAAmBgB,SAApB,KACG,SAAAC,GACC,OACEH,EAAMI,MACLD,EAAgBH,EAAMK,QAAUF,EAAgBH,EAAMK,OAAOD,MAEtDJ,EAAMM,QAAUN,EAAMO,UAC5BP,EAAMI,KAAOJ,EAAMI,KAAKA,KAAOD,EAAgBH,EAAMK,OAAOD,MAGvDhB,EAAAM,EAAAO,cAAA,uCAaf,SAAShB,IACP,MAAM,IAAIuB,MACR,gVATJrB,EAAYsB,UAAY,CACtBL,KAAMM,IAAUC,OAChBN,MAAOK,IAAUE,OAAOC,WACxBP,OAAQI,IAAUI,KAClBP,SAAUG,IAAUI,2BCnCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAO5B,IAAMG,cAAc0B,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBV,EAAiBX,UAAY,CAC3Ba,SAAUZ,IAAUqB,MAAM,CACxBL,SAAUhB,IAAUE,OAAOC,aAC1BA,YAGUO,8LCTTY,EAA2B,SAAAX,GAAA,IAC/BY,EAD+BZ,EAC/BY,YACAC,EAF+Bb,EAE/Ba,KACAC,EAH+Bd,EAG/Bc,KACAC,EAJ+Bf,EAI/Be,SACArD,EAL+BsC,EAK/BtC,MAL+B,OAO/BsD,EAAA,cAACC,EAAA,YAAD,CACEjC,MAAOkC,EACPjC,OAAQ,SAAAF,GACN,IAAMoC,EAAkBP,GAAe7B,EAAKqC,KAAKC,aAAaT,YAC9D,OACEI,EAAA,cAACM,EAAAjD,EAAD,CACEkD,eAAgB,CACdV,QAEFnD,MAAOA,EACP8D,cAAa,QAAUzC,EAAKqC,KAAKC,aAAa3D,MAC9CoD,KAAM,CACJ,CACEW,QAASN,EACTO,KAAM,eAER,CACED,QAAS/D,EACTiE,SAAU,YAEZ,CACEF,QAASN,EACTQ,SAAU,kBAEZ,CACEF,QAAS,UACTE,SAAU,WAEZ,CACEF,QAAS,UACTC,KAAM,gBAER,CACED,QAAS1C,EAAKqC,KAAKC,aAAaO,OAChCF,KAAM,mBAER,CACED,QAAS/D,EACTgE,KAAM,iBAER,CACED,QAASN,EACTO,KAAM,wBAGPG,OACCd,EAASe,OAAS,EACd,CACEL,QAASV,EAASgB,KAAK,MACvBL,KAAM,YAER,IAELG,OAAOf,MArDlB/B,KAAAiD,KA4DFrB,EAAIsB,aAAe,CACjBlB,SAAU,GACVF,KAAM,KACNC,KAAM,IAGOH,MAEf,IAAMO,EAAY,wWChFZgB,EAAiC,SAAAlC,GAAA,IAAGmC,EAAHnC,EAAGmC,UAAH,OACrCC,EAAA,qBACEC,MAAO,CACLC,WAAY,gBACZC,aAAc,YAGhBH,EAAA,qBACEC,MAAO,CACLG,OAAQ,SACRC,SAAU,QACVC,QAAS,sBAGXN,EAAA,oBAAIC,MAAO,CAAEG,OAAQ,IACnBJ,EAAA,cAACO,EAAA,KAAD,CACEC,GAAG,IACHP,MAAO,CACLQ,MAAO,QACPC,eAAgB,SAGjBX,OAOXD,EAAOD,aAAe,CACpBE,UAAW,IAGED,QCNAa,IA7BW,SAAA/C,GAAA,IAAGd,EAAHc,EAAGd,SAAH,OACxBkD,EAAA,cAACO,EAAA,YAAD,CACE3D,MAAK,YASLC,OAAQ,SAAAF,GAAI,OACVqD,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACY,EAAD,CAAQb,UAAWpD,EAAKqC,KAAKC,aAAa3D,QAC1C0E,EAAA,qBACEC,MAAO,CACLG,OAAQ,SACRC,SAAU,QACVC,QAAS,wBACTO,WAAY,IAGb/D,KArBTH,KAAAmE","file":"component---src-pages-404-tsx-08c4549969ecd1377f4c.js","sourcesContent":["import * as React from 'react'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist. :(</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { graphql, StaticQuery } from 'gatsby'\nimport * as React from 'react'\nimport Helmet from 'react-helmet'\n\ninterface SEOProps {\n  description?: string\n  lang?: string\n  meta?: any[]\n  keywords?: string[]\n  title: string\n}\n\nconst SEO: React.SFC<SEOProps> = ({\n  description,\n  lang,\n  meta,\n  keywords,\n  title,\n}): JSX.Element => (\n  <StaticQuery\n    query={detailsQuery}\n    render={data => {\n      const metaDescription = description || data.site.siteMetadata.description\n      return (\n        <Helmet\n          htmlAttributes={{\n            lang,\n          }}\n          title={title}\n          titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n          meta={[\n            {\n              content: metaDescription,\n              name: 'description',\n            },\n            {\n              content: title,\n              property: 'og:title',\n            },\n            {\n              content: metaDescription,\n              property: 'og:description',\n            },\n            {\n              content: 'website',\n              property: 'og:type',\n            },\n            {\n              content: 'summary',\n              name: 'twitter:card',\n            },\n            {\n              content: data.site.siteMetadata.author,\n              name: 'twitter:creator',\n            },\n            {\n              content: title,\n              name: 'twitter:title',\n            },\n            {\n              content: metaDescription,\n              name: 'twitter:description',\n            },\n          ]\n            .concat(\n              keywords.length > 0\n                ? {\n                    content: keywords.join(', '),\n                    name: 'keywords',\n                  }\n                : []\n            )\n            .concat(meta)}\n        />\n      )\n    }}\n  />\n)\n\nSEO.defaultProps = {\n  keywords: [],\n  lang: 'en',\n  meta: [],\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport * as React from 'react'\n\ninterface HeaderProps {\n  siteTitle?: string\n}\n\nconst Header: React.SFC<HeaderProps> = ({ siteTitle }) => (\n  <div\n    style={{\n      background: 'rebeccapurple',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: '40rem',\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nHeader.defaultProps = {\n  siteTitle: '',\n}\n\nexport default Header\n","import { graphql, StaticQuery } from 'gatsby'\nimport * as React from 'react'\n\nimport Header from './header'\n\nconst Layout: React.SFC = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: '40rem',\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nexport default Layout\n"],"sourceRoot":""}