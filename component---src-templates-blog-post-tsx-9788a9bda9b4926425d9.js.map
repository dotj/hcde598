{"version":3,"sources":["webpack:///./src/templates/blog-post.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","frontmatter","description","excerpt","style","display","marginBottom","marginTop","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","fields","slug","rel","React","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","createElement","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","lang","meta","keywords","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","name","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","Header","siteTitle","react","background","margin","maxWidth","gatsby_browser_entry","color","textDecoration","Layout","header","paddingTop","_755544856"],"mappings":"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","file":"component---src-templates-blog-post-tsx-9788a9bda9b4926425d9.js","sourcesContent":["import { graphql, Link } from 'gatsby'\nimport * as React from 'react'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\ninterface BlogPostTemplateProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n      }\n    }\n    markdownRemark: {\n      id: string\n      excerpt: string\n      html: string\n      frontmatter: {\n        title: string\n        date: string\n      }\n    }\n  }\n  pageContext: {\n    previous: any\n    next: any\n  }\n}\n\nclass BlogPostTemplate extends React.Component<BlogPostTemplateProps, {}> {\n  render() {\n    const post = this.props.data.markdownRemark\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout>\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\n        <h1>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            display: 'block',\n            marginBottom: '1rem',\n            marginTop: '-rem',\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: '14px',\n          }}\n        />\n        <ul\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            listStyle: 'none',\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { graphql, StaticQuery } from 'gatsby'\nimport * as React from 'react'\nimport Helmet from 'react-helmet'\n\ninterface SEOProps {\n  description?: string\n  lang?: string\n  meta?: any[]\n  keywords?: string[]\n  title: string\n}\n\nconst SEO: React.SFC<SEOProps> = ({\n  description,\n  lang,\n  meta,\n  keywords,\n  title,\n}): JSX.Element => (\n  <StaticQuery\n    query={detailsQuery}\n    render={data => {\n      const metaDescription = description || data.site.siteMetadata.description\n      return (\n        <Helmet\n          htmlAttributes={{\n            lang,\n          }}\n          title={title}\n          titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n          meta={[\n            {\n              content: metaDescription,\n              name: 'description',\n            },\n            {\n              content: title,\n              property: 'og:title',\n            },\n            {\n              content: metaDescription,\n              property: 'og:description',\n            },\n            {\n              content: 'website',\n              property: 'og:type',\n            },\n            {\n              content: 'summary',\n              name: 'twitter:card',\n            },\n            {\n              content: data.site.siteMetadata.author,\n              name: 'twitter:creator',\n            },\n            {\n              content: title,\n              name: 'twitter:title',\n            },\n            {\n              content: metaDescription,\n              name: 'twitter:description',\n            },\n          ]\n            .concat(\n              keywords.length > 0\n                ? {\n                    content: keywords.join(', '),\n                    name: 'keywords',\n                  }\n                : []\n            )\n            .concat(meta)}\n        />\n      )\n    }}\n  />\n)\n\nSEO.defaultProps = {\n  keywords: [],\n  lang: 'en',\n  meta: [],\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport * as React from 'react'\n\ninterface HeaderProps {\n  siteTitle?: string\n}\n\nconst Header: React.SFC<HeaderProps> = ({ siteTitle }) => (\n  <div\n    style={{\n      background: 'rebeccapurple',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: '40rem',\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nHeader.defaultProps = {\n  siteTitle: '',\n}\n\nexport default Header\n","import { graphql, StaticQuery } from 'gatsby'\nimport * as React from 'react'\n\nimport Header from './header'\n\nconst Layout: React.SFC = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: '40rem',\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nexport default Layout\n"],"sourceRoot":""}