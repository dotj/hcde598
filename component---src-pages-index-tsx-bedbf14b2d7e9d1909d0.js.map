{"version":3,"sources":["webpack:///./src/components/bio.tsx","webpack:///./src/pages/index.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx"],"names":["Bio","react","IndexPage","render","posts","this","props","data","allMarkdownRemark","edges","layout","seo","title","keywords","style","maxWidth","marginBottom","bio","map","_ref","node","frontmatter","fields","slug","key","gatsby_browser_entry","boxShadow","to","date","dangerouslySetInnerHTML","__html","excerpt","React","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","createElement","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_1__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","name","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","Header","siteTitle","background","margin","padding","color","textDecoration","Layout","header","paddingTop","_755544856"],"mappings":"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","file":"component---src-pages-index-tsx-bedbf14b2d7e9d1909d0.js","sourcesContent":["import { graphql, StaticQuery } from 'gatsby'\nimport Img from 'gatsby-image'\nimport * as React from 'react'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst Bio = () => (\n  <p>Hi, I'm Julie and this is my bio.</p>\n)\n\nexport default Bio\n","import { graphql, Link } from 'gatsby'\nimport * as React from 'react'\nimport Image from '../components/image'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Bio from '../components/bio'\n\ninterface PostNode {\n  node: {\n    excerpt: string\n    frontmatter: {\n      date: string\n      title: string\n    }\n    fields: {\n      slug: string\n    }\n  }\n}\n\ninterface IndexPageProps {\n  data: {\n    site: {\n      siteMetadata: {\n        siteName: string\n      }\n    }\n    allMarkdownRemark: {\n      edges: PostNode[]\n    }\n  }\n}\n\nclass IndexPage extends React.Component<IndexPageProps, {}> {\n  render() {\n    const { data } = this.props\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout>\n        <SEO\n          title=\"All posts\"\n          keywords={['blog', 'gatsby', 'javascript', 'react']}\n        />\n        <div style={{ maxWidth: '300px', marginBottom: '1.45rem' }}>\n          <Bio />\n        </div>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: '0.25rem',\n                }}\n              >\n                <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { graphql, StaticQuery } from 'gatsby'\nimport * as React from 'react'\nimport Helmet from 'react-helmet'\n\ninterface SEOProps {\n  description?: string\n  lang?: string\n  meta?: any[]\n  keywords?: string[]\n  title: string\n}\n\nconst SEO: React.SFC<SEOProps> = ({\n  description,\n  lang,\n  meta,\n  keywords,\n  title,\n}): JSX.Element => (\n  <StaticQuery\n    query={detailsQuery}\n    render={data => {\n      const metaDescription = description || data.site.siteMetadata.description\n      return (\n        <Helmet\n          htmlAttributes={{\n            lang,\n          }}\n          title={title}\n          titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n          meta={[\n            {\n              content: metaDescription,\n              name: 'description',\n            },\n            {\n              content: title,\n              property: 'og:title',\n            },\n            {\n              content: metaDescription,\n              property: 'og:description',\n            },\n            {\n              content: 'website',\n              property: 'og:type',\n            },\n            {\n              content: 'summary',\n              name: 'twitter:card',\n            },\n            {\n              content: data.site.siteMetadata.author,\n              name: 'twitter:creator',\n            },\n            {\n              content: title,\n              name: 'twitter:title',\n            },\n            {\n              content: metaDescription,\n              name: 'twitter:description',\n            },\n          ]\n            .concat(\n              keywords.length > 0\n                ? {\n                    content: keywords.join(', '),\n                    name: 'keywords',\n                  }\n                : []\n            )\n            .concat(meta)}\n        />\n      )\n    }}\n  />\n)\n\nSEO.defaultProps = {\n  keywords: [],\n  lang: 'en',\n  meta: [],\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport * as React from 'react'\n\ninterface HeaderProps {\n  siteTitle?: string\n}\n\nconst Header: React.SFC<HeaderProps> = ({ siteTitle }) => (\n  <div\n    style={{\n      background: 'rebeccapurple',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: '40rem',\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nHeader.defaultProps = {\n  siteTitle: '',\n}\n\nexport default Header\n","import { graphql, StaticQuery } from 'gatsby'\nimport * as React from 'react'\n\nimport Header from './header'\n\nconst Layout: React.SFC = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: '40rem',\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nexport default Layout\n"],"sourceRoot":""}